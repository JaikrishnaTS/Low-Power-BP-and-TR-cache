sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 1
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 62.2747
Branch Predictor Power Consumption: 4.52313  (7.5%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.0800408  (0.133%)
 Instruction Decode Power (W): 0.00399788
 RAT decode_power (W): 0.0283786
 RAT wordline_power (W): 0.00699436
 RAT bitline_power (W): 0.0406699
 DCL Comparators (W): 0
Instruction Window Power Consumption: 0.363765  (0.604%)
 tagdrive (W): 0.0203623
 tagmatch (W): 0.00780062
 Selection Logic (W): 0.00335542
 decode_power (W): 0.0133126
 wordline_power (W): 0.00989977
 bitline_power (W): 0.309034
Load/Store Queue Power Consumption: 0.96318  (1.6%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 0.535973  (0.889%)
 decode_power (W): 0.0283786
 wordline_power (W): 0.00989977
 bitline_power (W): 0.497694
Result Bus Power Consumption: 0.510827  (0.847%)
Total Clock Power: 21.5856  (35.8%)
Int ALU Power: 4.66013  (7.73%)
FP ALU Power: 14.281  (23.7%)
Instruction Cache Power Consumption: 2.21363  (3.67%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.437%)
Data Cache Power Consumption: 5.18303  (8.6%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.5%)
Level 2 Cache Power Consumption: 4.2091 (6.98%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: ./sim-outorder -max:inst 10000000 -redir:sim out.txt -fetch:ifqsize 1 -decode:width 1 -issue:width 1 -issue:inorder true -issue:wrongpath false -commit:width 1 -bpred perfect -fetch:mplat 1 ../automotive/basicmath/basicmath_small 

sim: simulation started @ Thu Nov  5 20:41:21 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim          out.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst            10000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              1 # instruction fetch queue size (in insts)
-fetch:mplat                1 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb|tbit}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               1 # instruction decode B/W (insts/cycle)
-issue:width                1 # instruction issue B/W (insts/cycle)
-issue:inorder           true # run pipeline with in-order issue
-issue:wrongpath        false # issue instructions down wrong execution paths
-commit:width               1 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn               10000000 # total number of instructions committed
sim_num_refs                2524436 # total number of loads and stores committed
sim_num_loads               1539041 # total number of loads committed
sim_num_stores          985395.0000 # total number of stores committed
sim_num_branches            1678895 # total number of branches committed
sim_elapsed_time                  7 # total simulation time in seconds
sim_inst_rate          1428571.4286 # simulation speed (in insts/sec)
sim_total_insn             10000000 # total number of instructions executed
sim_total_refs              2524436 # total number of loads and stores executed
sim_total_loads             1539041 # total number of loads executed
sim_total_stores        985395.0000 # total number of stores executed
sim_total_branches          1678895 # total number of branches executed
sim_cycle                  18066230 # total simulation time in cycles
sim_IPC                      0.5535 # instructions per cycle
sim_CPI                      1.8066 # cycles per instruction
sim_exec_BW                  0.5535 # total instructions (mis-spec + committed) per cycle
sim_IPB                      5.9563 # instruction per branch
IFQ_count                  13217272 # cumulative IFQ occupancy
IFQ_fcount                 13217272 # cumulative IFQ full count
ifq_occupancy                0.7316 # avg IFQ occupancy (insn's)
ifq_rate                     0.5535 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.3217 # avg IFQ occupant latency (cycle's)
ifq_full                     0.7316 # fraction of time (cycle's) IFQ was full
RUU_count                  35305677 # cumulative RUU occupancy
RUU_fcount                        0 # cumulative RUU full count
ruu_occupancy                1.9542 # avg RUU occupancy (insn's)
ruu_rate                     0.5535 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  3.5306 # avg RUU occupant latency (cycle's)
ruu_full                     0.0000 # fraction of time (cycle's) RUU was full
LSQ_count                   9262192 # cumulative LSQ occupancy
LSQ_fcount                        0 # cumulative LSQ full count
lsq_occupancy                0.5127 # avg LSQ occupancy (insn's)
lsq_rate                     0.5535 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  0.9262 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0000 # fraction of time (cycle's) LSQ was full
sim_slip                   57092288 # total number of slip cycles
avg_sim_slip                 5.7092 # the average slip between issue and retirement
il1.accesses               10805357 # total number of accesses
il1.hits                   10000001 # total number of hits
il1.misses                   805356 # total number of misses
il1.replacements             804873 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0745 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0745 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                2524434 # total number of accesses
dl1.hits                    2523800 # total number of hits
dl1.misses                      634 # total number of misses
dl1.replacements                122 # total number of replacements
dl1.writebacks                  116 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0003 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                 806106 # total number of accesses
ul2.hits                     805119 # total number of hits
ul2.misses                      987 # total number of misses
ul2.replacements                  0 # total number of replacements
ul2.writebacks                    0 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0012 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              10805357 # total number of accesses
itlb.hits                  10805336 # total number of hits
itlb.misses                      21 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses               2524435 # total number of accesses
dtlb.hits                   2524425 # total number of hits
dtlb.misses                      10 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           1446035.3199 # total power usage of rename unit
bpred_power            81715841.7672 # total power usage of bpred unit
window_power           6571864.3381 # total power usage of instruction window
lsq_power              17401031.1813 # total power usage of load/store queue
regfile_power          9683008.0115 # total power usage of arch. regfile
icache_power           44748999.0850 # total power usage of icache
dcache_power           109931316.1957 # total power usage of dcache
dcache2_power          76042486.3709 # total power usage of dcache2
alu_power              342195631.2689 # total power usage of alu
falu_power             258004642.7486 # total power usage of falu
resultbus_power        9228711.6780 # total power usage of resultbus
clock_power            389971215.0611 # total power usage of clock
avg_rename_power             0.0800 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             0.3638 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            0.5360 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          0.5108 # avg power usage of resultbus
avg_clock_power             21.5856 # avg power usage of clock
fetch_stage_power      126464840.8522 # total power usage of fetch stage
dispatch_stage_power   1446035.3199 # total power usage of dispatch stage
issue_stage_power      561371041.0329 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.0800 # average power of dispatch unit per cycle
avg_issue_power             31.0729 # average power of issue unit per cycle
total_power            1088936140.2774 # total power per cycle
avg_total_power_cycle       60.2747 # average total power per cycle
avg_total_power_cycle_nofp_nod2      41.7845 # average total power per cycle
avg_total_power_insn       108.8936 # average total power per insn
avg_total_power_insn_nofp_nod2      75.4889 # average total power per insn
rename_power_cc1        800407.4188 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       5460228.0694 # total power usage of instruction window_cc1
lsq_power_cc1          1130262.3965 # total power usage of lsq_cc1
regfile_power_cc1      5498278.4013 # total power usage of arch. regfile_cc1
icache_power_cc1       26764239.7220 # total power usage of icache_cc1
dcache_power_cc1       15358102.6291 # total power usage of dcache_cc1
dcache2_power_cc1      3392387.8189 # total power usage of dcache2_cc1
alu_power_cc1          46772652.8975 # total power usage of alu_cc1
resultbus_power_cc1    4511890.5907 # total power usage of resultbus_cc1
clock_power_cc1        66172682.8354 # total power usage of clock_cc1
avg_rename_power_cc1         0.0443 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.3022 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.0626 # avg power usage of lsq_cc1
avg_regfile_power_cc1        0.3043 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.4815 # avg power usage of icache_cc1
avg_dcache_power_cc1         0.8501 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.1878 # avg power usage of dcache2_cc1
avg_alu_power_cc1            2.5890 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.2497 # avg power usage of resultbus_cc1
avg_clock_power_cc1          3.6628 # avg power usage of clock_cc1
fetch_stage_power_cc1  26764239.7220 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1  800407.4188 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  76625524.4022 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.4815 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.0443 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          4.2414 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  175861132.7798 # total power per cycle_cc1
avg_total_power_cycle_cc1       9.7342 # average total power per cycle_cc1
avg_total_power_insn_cc1      17.5861 # average total power per insn_cc1
rename_power_cc2        800407.4188 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       5151620.9308 # total power usage of instruction window_cc2
lsq_power_cc2           565131.1983 # total power usage of lsq_cc2
regfile_power_cc2      2719544.5622 # total power usage of arch. regfile_cc2
icache_power_cc2       26764239.7220 # total power usage of icache_cc2
dcache_power_cc2       7680472.1402 # total power usage of dcache_cc2
dcache2_power_cc2      1696488.5461 # total power usage of dcache2_cc2
alu_power_cc2          11693163.2244 # total power usage of alu_cc2
resultbus_power_cc2    4511890.5907 # total power usage of resultbus_cc2
clock_power_cc2        37275224.7020 # total power usage of clock_cc2
avg_rename_power_cc2         0.0443 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.2852 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0313 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.1505 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.4815 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.4251 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0939 # avg power usage of dcache2_cc2
avg_alu_power_cc2            0.6472 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.2497 # avg power usage of resultbus_cc2
avg_clock_power_cc2          2.0633 # avg power usage of clock_cc2
fetch_stage_power_cc2  26764239.7220 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2  800407.4188 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  31298766.6304 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.4815 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.0443 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          1.7324 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  98858183.0355 # total power per cycle_cc2
avg_total_power_cycle_cc2       5.4720 # average total power per cycle_cc2
avg_total_power_insn_cc2       9.8858 # average total power per insn_cc2
rename_power_cc3        864970.2089 # total power usage of rename unit_cc3
bpred_power_cc3        8171584.1811 # total power usage of bpred unit_cc3
window_power_cc3       5317798.8793 # total power usage of instruction window_cc3
lsq_power_cc3          2179429.2743 # total power usage of lsq_cc3
regfile_power_cc3      3046979.8906 # total power usage of arch. regfile_cc3
icache_power_cc3       28562715.6546 # total power usage of icache_cc3
dcache_power_cc3       17137793.5023 # total power usage of dcache_cc3
dcache2_power_cc3      8961499.6663 # total power usage of dcache2_cc3
alu_power_cc3          41235461.0626 # total power usage of alu_cc3
resultbus_power_cc3    4932693.1839 # total power usage of resultbus_cc3
clock_power_cc3        69593185.5944 # total power usage of clock_cc3
avg_rename_power_cc3         0.0479 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.4523 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.2944 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1206 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.1687 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.5810 # avg power usage of icache_cc3
avg_dcache_power_cc3         0.9486 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4960 # avg power usage of dcache2_cc3
avg_alu_power_cc3            2.2825 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.2730 # avg power usage of resultbus_cc3
avg_clock_power_cc3          3.8521 # avg power usage of clock_cc3
fetch_stage_power_cc3  36734299.8357 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3  864970.2089 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  79764675.5687 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.0333 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.0479 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          4.4151 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  190004111.0984 # total power per cycle_cc3
avg_total_power_cycle_cc3      10.5171 # average total power per cycle_cc3
avg_total_power_insn_cc3      19.0004 # average total power per insn_cc3
total_rename_access         9999994 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access        39015850 # total number accesses of instruction window
total_lsq_access            2524436 # total number accesses of load/store queue
total_regfile_access       17940930 # total number accesses of arch. regfile
total_icache_access        10805357 # total number accesses of icache
total_dcache_access         2524434 # total number accesses of dcache
total_dcache2_access         806106 # total number accesses of dcache2
total_alu_access            9723233 # total number accesses of alu
total_resultbus_access      9860138 # total number accesses of resultbus
avg_rename_access            0.5535 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            2.1596 # avg number accesses of instruction window
avg_lsq_access               0.1397 # avg number accesses of lsq
avg_regfile_access           0.9931 # avg number accesses of arch. regfile
avg_icache_access            0.5981 # avg number accesses of icache
avg_dcache_access            0.1397 # avg number accesses of dcache
avg_dcache2_access           0.0446 # avg number accesses of dcache2
avg_alu_access               0.5382 # avg number accesses of alu
avg_resultbus_access         0.5458 # avg number accesses of resultbus
max_rename_access                 1 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                 5 # max number accesses of instruction window
max_lsq_access                    2 # max number accesses of load/store queue
max_regfile_access                3 # max number accesses of arch. regfile
max_icache_access                 1 # max number accesses of icache
max_dcache_access                 2 # max number accesses of dcache
max_dcache2_access                3 # max number accesses of dcache2
max_alu_access                    1 # max number accesses of alu
max_resultbus_access              3 # max number accesses of resultbus
max_cycle_power_cc1         27.5855 # maximum cycle power usage of cc1
max_cycle_power_cc2         12.4717 # maximum cycle power usage of cc2
max_cycle_power_cc3         16.6454 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  91008 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  12848 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   33 # total number of pages allocated
mem.page_mem                   132k # total size of memory pages allocated
mem.ptab_misses                  37 # total first level page table misses
mem.ptab_accesses          61859708 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 1
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 62.2747
Branch Predictor Power Consumption: 4.52313  (7.5%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.0800408  (0.133%)
 Instruction Decode Power (W): 0.00399788
 RAT decode_power (W): 0.0283786
 RAT wordline_power (W): 0.00699436
 RAT bitline_power (W): 0.0406699
 DCL Comparators (W): 0
Instruction Window Power Consumption: 0.363765  (0.604%)
 tagdrive (W): 0.0203623
 tagmatch (W): 0.00780062
 Selection Logic (W): 0.00335542
 decode_power (W): 0.0133126
 wordline_power (W): 0.00989977
 bitline_power (W): 0.309034
Load/Store Queue Power Consumption: 0.96318  (1.6%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 0.535973  (0.889%)
 decode_power (W): 0.0283786
 wordline_power (W): 0.00989977
 bitline_power (W): 0.497694
Result Bus Power Consumption: 0.510827  (0.847%)
Total Clock Power: 21.5856  (35.8%)
Int ALU Power: 4.66013  (7.73%)
FP ALU Power: 14.281  (23.7%)
Instruction Cache Power Consumption: 2.21363  (3.67%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.437%)
Data Cache Power Consumption: 5.18303  (8.6%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.5%)
Level 2 Cache Power Consumption: 4.2091 (6.98%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: ./sim-outorder -max:inst 10000000 -redir:sim out.txt -fetch:ifqsize 1 -decode:width 1 -issue:width 1 -issue:inorder true -issue:wrongpath false -commit:width 1 -bpred perfect -fetch:mplat 1 ../automotive/basicmath/basicmath_large 

sim: simulation started @ Thu Nov  5 20:41:28 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim          out.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst            10000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              1 # instruction fetch queue size (in insts)
-fetch:mplat                1 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb|tbit}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               1 # instruction decode B/W (insts/cycle)
-issue:width                1 # instruction issue B/W (insts/cycle)
-issue:inorder           true # run pipeline with in-order issue
-issue:wrongpath        false # issue instructions down wrong execution paths
-commit:width               1 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn               10000000 # total number of instructions committed
sim_num_refs                2527609 # total number of loads and stores committed
sim_num_loads               1540310 # total number of loads committed
sim_num_stores          987299.0000 # total number of stores committed
sim_num_branches            1678165 # total number of branches committed
sim_elapsed_time                  6 # total simulation time in seconds
sim_inst_rate          1666666.6667 # simulation speed (in insts/sec)
sim_total_insn             10000000 # total number of instructions executed
sim_total_refs              2527609 # total number of loads and stores executed
sim_total_loads             1540310 # total number of loads executed
sim_total_stores        987299.0000 # total number of stores executed
sim_total_branches          1678165 # total number of branches executed
sim_cycle                  18097284 # total simulation time in cycles
sim_IPC                      0.5526 # instructions per cycle
sim_CPI                      1.8097 # cycles per instruction
sim_exec_BW                  0.5526 # total instructions (mis-spec + committed) per cycle
sim_IPB                      5.9589 # instruction per branch
IFQ_count                  13241138 # cumulative IFQ occupancy
IFQ_fcount                 13241138 # cumulative IFQ full count
ifq_occupancy                0.7317 # avg IFQ occupancy (insn's)
ifq_rate                     0.5526 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.3241 # avg IFQ occupant latency (cycle's)
ifq_full                     0.7317 # fraction of time (cycle's) IFQ was full
RUU_count                  35298082 # cumulative RUU occupancy
RUU_fcount                        0 # cumulative RUU full count
ruu_occupancy                1.9505 # avg RUU occupancy (insn's)
ruu_rate                     0.5526 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  3.5298 # avg RUU occupant latency (cycle's)
ruu_full                     0.0000 # fraction of time (cycle's) RUU was full
LSQ_count                   9303684 # cumulative LSQ occupancy
LSQ_fcount                       12 # cumulative LSQ full count
lsq_occupancy                0.5141 # avg LSQ occupancy (insn's)
lsq_rate                     0.5526 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  0.9304 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0000 # fraction of time (cycle's) LSQ was full
sim_slip                   57129364 # total number of slip cycles
avg_sim_slip                 5.7129 # the average slip between issue and retirement
il1.accesses               10806503 # total number of accesses
il1.hits                   10000001 # total number of hits
il1.misses                   806502 # total number of misses
il1.replacements             806021 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0746 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0746 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                2527609 # total number of accesses
dl1.hits                    2526967 # total number of hits
dl1.misses                      642 # total number of misses
dl1.replacements                130 # total number of replacements
dl1.writebacks                  125 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0003 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0001 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                 807269 # total number of accesses
ul2.hits                     806262 # total number of hits
ul2.misses                     1007 # total number of misses
ul2.replacements                  0 # total number of replacements
ul2.writebacks                    0 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0012 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              10806503 # total number of accesses
itlb.hits                  10806481 # total number of hits
itlb.misses                      22 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses               2527609 # total number of accesses
dtlb.hits                   2527599 # total number of hits
dtlb.misses                      10 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           1448520.9065 # total power usage of rename unit
bpred_power            81856302.9342 # total power usage of bpred unit
window_power           6583160.7001 # total power usage of instruction window
lsq_power              17430941.7726 # total power usage of load/store queue
regfile_power          9699652.1110 # total power usage of arch. regfile
icache_power           44825918.0336 # total power usage of icache
dcache_power           110120276.8748 # total power usage of dcache
dcache2_power          76173195.6210 # total power usage of dcache2
alu_power              342783830.5299 # total power usage of alu
falu_power             258448126.3188 # total power usage of falu
resultbus_power        9244574.8886 # total power usage of resultbus
clock_power            390641535.6593 # total power usage of clock
avg_rename_power             0.0800 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             0.3638 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            0.5360 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          0.5108 # avg power usage of resultbus
avg_clock_power             21.5856 # avg power usage of clock
fetch_stage_power      126682220.9678 # total power usage of fetch stage
dispatch_stage_power   1448520.9065 # total power usage of dispatch stage
issue_stage_power      562335980.3870 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.0800 # average power of dispatch unit per cycle
avg_issue_power             31.0729 # average power of issue unit per cycle
total_power            1090807910.0317 # total power per cycle
avg_total_power_cycle       60.2747 # average total power per cycle
avg_total_power_cycle_nofp_nod2      41.7845 # average total power per cycle
avg_total_power_insn       109.0808 # average total power per insn
avg_total_power_insn_nofp_nod2      75.6187 # average total power per insn
rename_power_cc1        800407.4188 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       5340871.7616 # total power usage of instruction window_cc1
lsq_power_cc1          1133392.2144 # total power usage of lsq_cc1
regfile_power_cc1      5344454.0085 # total power usage of arch. regfile_cc1
icache_power_cc1       26767078.2973 # total power usage of icache_cc1
dcache_power_cc1       15377428.2915 # total power usage of dcache_cc1
dcache2_power_cc1      3397249.3242 # total power usage of dcache2_cc1
alu_power_cc1          46752192.6699 # total power usage of alu_cc1
resultbus_power_cc1    4184196.8375 # total power usage of resultbus_cc1
clock_power_cc1        65767616.9233 # total power usage of clock_cc1
avg_rename_power_cc1         0.0442 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.2951 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.0626 # avg power usage of lsq_cc1
avg_regfile_power_cc1        0.2953 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.4791 # avg power usage of icache_cc1
avg_dcache_power_cc1         0.8497 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.1877 # avg power usage of dcache2_cc1
avg_alu_power_cc1            2.5834 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.2312 # avg power usage of resultbus_cc1
avg_clock_power_cc1          3.6341 # avg power usage of clock_cc1
fetch_stage_power_cc1  26767078.2973 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1  800407.4188 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  76185331.0991 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.4791 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.0442 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          4.2098 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  174864887.7469 # total power per cycle_cc1
avg_total_power_cycle_cc1       9.6625 # average total power per cycle_cc1
avg_total_power_insn_cc1      17.4865 # average total power per insn_cc1
rename_power_cc2        800407.4188 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       5051814.1986 # total power usage of instruction window_cc2
lsq_power_cc2           566696.1072 # total power usage of lsq_cc2
regfile_power_cc2      2661413.5379 # total power usage of arch. regfile_cc2
icache_power_cc2       26767078.2973 # total power usage of icache_cc2
dcache_power_cc2       7690131.9289 # total power usage of dcache_cc2
dcache2_power_cc2      1698936.1352 # total power usage of dcache2_cc2
alu_power_cc2          11688048.1675 # total power usage of alu_cc2
resultbus_power_cc2    4184196.8375 # total power usage of resultbus_cc2
clock_power_cc2        36957507.6955 # total power usage of clock_cc2
avg_rename_power_cc2         0.0442 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.2791 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0313 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.1471 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.4791 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.4249 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0939 # avg power usage of dcache2_cc2
avg_alu_power_cc2            0.6458 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.2312 # avg power usage of resultbus_cc2
avg_clock_power_cc2          2.0422 # avg power usage of clock_cc2
fetch_stage_power_cc2  26767078.2973 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2  800407.4188 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  30879823.3748 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.4791 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.0442 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          1.7063 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  98066230.3244 # total power per cycle_cc2
avg_total_power_cycle_cc2       5.4188 # average total power per cycle_cc2
avg_total_power_insn_cc2       9.8066 # average total power per insn_cc2
rename_power_cc3        865218.7676 # total power usage of rename unit_cc3
bpred_power_cc3        8185630.2979 # total power usage of bpred unit_cc3
window_power_cc3       5220627.3417 # total power usage of instruction window_cc3
lsq_power_cc3          2183837.2710 # total power usage of lsq_cc3
regfile_power_cc3      2992262.3163 # total power usage of arch. regfile_cc3
icache_power_cc3       28572962.2671 # total power usage of icache_cc3
dcache_power_cc3       17164416.7927 # total power usage of dcache_cc3
dcache2_power_cc3      8976531.6089 # total power usage of dcache2_cc3
alu_power_cc3          41291211.9546 # total power usage of alu_cc3
resultbus_power_cc3    4606983.2773 # total power usage of resultbus_cc3
clock_power_cc3        69348232.8025 # total power usage of clock_cc3
avg_rename_power_cc3         0.0478 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.4523 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.2885 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1207 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.1653 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.5789 # avg power usage of icache_cc3
avg_dcache_power_cc3         0.9485 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4960 # avg power usage of dcache2_cc3
avg_alu_power_cc3            2.2816 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.2546 # avg power usage of resultbus_cc3
avg_clock_power_cc3          3.8320 # avg power usage of clock_cc3
fetch_stage_power_cc3  36758592.5650 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3  865218.7676 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  79443608.2461 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.0312 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.0478 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          4.3898 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  189407914.6976 # total power per cycle_cc3
avg_total_power_cycle_cc3      10.4661 # average total power per cycle_cc3
avg_total_power_insn_cc3      18.9408 # average total power per insn_cc3
total_rename_access         9999994 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access        39031274 # total number accesses of instruction window
total_lsq_access            2527609 # total number accesses of load/store queue
total_regfile_access       17949522 # total number accesses of arch. regfile
total_icache_access        10806503 # total number accesses of icache
total_dcache_access         2527609 # total number accesses of dcache
total_dcache2_access         807269 # total number accesses of dcache2
total_alu_access            9723242 # total number accesses of alu
total_resultbus_access      9862137 # total number accesses of resultbus
avg_rename_access            0.5526 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            2.1567 # avg number accesses of instruction window
avg_lsq_access               0.1397 # avg number accesses of lsq
avg_regfile_access           0.9918 # avg number accesses of arch. regfile
avg_icache_access            0.5971 # avg number accesses of icache
avg_dcache_access            0.1397 # avg number accesses of dcache
avg_dcache2_access           0.0446 # avg number accesses of dcache2
avg_alu_access               0.5373 # avg number accesses of alu
avg_resultbus_access         0.5450 # avg number accesses of resultbus
max_rename_access                 1 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                 5 # max number accesses of instruction window
max_lsq_access                    1 # max number accesses of load/store queue
max_regfile_access                3 # max number accesses of arch. regfile
max_icache_access                 1 # max number accesses of icache
max_dcache_access                 2 # max number accesses of dcache
max_dcache2_access                3 # max number accesses of dcache2
max_alu_access                    1 # max number accesses of alu
max_resultbus_access              3 # max number accesses of resultbus
max_cycle_power_cc1         27.4901 # maximum cycle power usage of cc1
max_cycle_power_cc2         12.3612 # maximum cycle power usage of cc2
max_cycle_power_cc3         16.5357 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  92048 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  12992 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   33 # total number of pages allocated
mem.page_mem                   132k # total size of memory pages allocated
mem.ptab_misses                  37 # total first level page table misses
mem.ptab_accesses          61888968 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 1
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 62.2747
Branch Predictor Power Consumption: 4.52313  (7.5%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.0800408  (0.133%)
 Instruction Decode Power (W): 0.00399788
 RAT decode_power (W): 0.0283786
 RAT wordline_power (W): 0.00699436
 RAT bitline_power (W): 0.0406699
 DCL Comparators (W): 0
Instruction Window Power Consumption: 0.363765  (0.604%)
 tagdrive (W): 0.0203623
 tagmatch (W): 0.00780062
 Selection Logic (W): 0.00335542
 decode_power (W): 0.0133126
 wordline_power (W): 0.00989977
 bitline_power (W): 0.309034
Load/Store Queue Power Consumption: 0.96318  (1.6%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 0.535973  (0.889%)
 decode_power (W): 0.0283786
 wordline_power (W): 0.00989977
 bitline_power (W): 0.497694
Result Bus Power Consumption: 0.510827  (0.847%)
Total Clock Power: 21.5856  (35.8%)
Int ALU Power: 4.66013  (7.73%)
FP ALU Power: 14.281  (23.7%)
Instruction Cache Power Consumption: 2.21363  (3.67%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.437%)
Data Cache Power Consumption: 5.18303  (8.6%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.5%)
Level 2 Cache Power Consumption: 4.2091 (6.98%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: ./sim-outorder -max:inst 10000000 -redir:sim out.txt -fetch:ifqsize 1 -decode:width 1 -issue:width 1 -issue:inorder true -issue:wrongpath false -commit:width 1 -bpred perfect -fetch:mplat 1 ../automotive/bitcount/bitcnts 75000 

sim: simulation started @ Thu Nov  5 20:41:34 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim          out.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst            10000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              1 # instruction fetch queue size (in insts)
-fetch:mplat                1 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb|tbit}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               1 # instruction decode B/W (insts/cycle)
-issue:width                1 # instruction issue B/W (insts/cycle)
-issue:inorder           true # run pipeline with in-order issue
-issue:wrongpath        false # issue instructions down wrong execution paths
-commit:width               1 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn               10000000 # total number of instructions committed
sim_num_refs                 853436 # total number of loads and stores committed
sim_num_loads                577106 # total number of loads committed
sim_num_stores          276330.0000 # total number of stores committed
sim_num_branches            1828787 # total number of branches committed
sim_elapsed_time                  6 # total simulation time in seconds
sim_inst_rate          1666666.6667 # simulation speed (in insts/sec)
sim_total_insn             10000000 # total number of instructions executed
sim_total_refs               853436 # total number of loads and stores executed
sim_total_loads              577106 # total number of loads executed
sim_total_stores        276330.0000 # total number of stores executed
sim_total_branches          1828787 # total number of branches executed
sim_cycle                  10881831 # total simulation time in cycles
sim_IPC                      0.9190 # instructions per cycle
sim_CPI                      1.0882 # cycles per instruction
sim_exec_BW                  0.9190 # total instructions (mis-spec + committed) per cycle
sim_IPB                      5.4681 # instruction per branch
IFQ_count                  10855743 # cumulative IFQ occupancy
IFQ_fcount                 10855743 # cumulative IFQ full count
ifq_occupancy                0.9976 # avg IFQ occupancy (insn's)
ifq_rate                     0.9190 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.0856 # avg IFQ occupant latency (cycle's)
ifq_full                     0.9976 # fraction of time (cycle's) IFQ was full
RUU_count                  30587853 # cumulative RUU occupancy
RUU_fcount                        0 # cumulative RUU full count
ruu_occupancy                2.8109 # avg RUU occupancy (insn's)
ruu_rate                     0.9190 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  3.0588 # avg RUU occupant latency (cycle's)
ruu_full                     0.0000 # fraction of time (cycle's) RUU was full
LSQ_count                   3138971 # cumulative LSQ occupancy
LSQ_fcount                        0 # cumulative LSQ full count
lsq_occupancy                0.2885 # avg LSQ occupancy (insn's)
lsq_rate                     0.9190 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  0.3139 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0000 # fraction of time (cycle's) LSQ was full
sim_slip                   44580241 # total number of slip cycles
avg_sim_slip                 4.4580 # the average slip between issue and retirement
il1.accesses               10001801 # total number of accesses
il1.hits                   10000001 # total number of hits
il1.misses                     1800 # total number of misses
il1.replacements               1321 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0002 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0001 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                 853434 # total number of accesses
dl1.hits                     852955 # total number of hits
dl1.misses                      479 # total number of misses
dl1.replacements                 22 # total number of replacements
dl1.writebacks                   18 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0006 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                   2297 # total number of accesses
ul2.hits                       1450 # total number of hits
ul2.misses                      847 # total number of misses
ul2.replacements                  0 # total number of replacements
ul2.writebacks                    0 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.3687 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              10001801 # total number of accesses
itlb.hits                  10001781 # total number of hits
itlb.misses                      20 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses                853434 # total number of accesses
dtlb.hits                    853425 # total number of hits
dtlb.misses                       9 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power            870990.3489 # total power usage of rename unit
bpred_power            49219897.0284 # total power usage of bpred unit
window_power           3958430.5698 # total power usage of instruction window
lsq_power              10481161.8464 # total power usage of load/store queue
regfile_power          5832365.5088 # total power usage of arch. regfile
icache_power           26953661.3642 # total power usage of icache
dcache_power           66214921.7082 # total power usage of dcache
dcache2_power          45802665.2793 # total power usage of dcache2
alu_power              206114669.6577 # total power usage of alu
falu_power             155403917.6188 # total power usage of falu
resultbus_power        5558729.2323 # total power usage of resultbus
clock_power            234891333.6573 # total power usage of clock
avg_rename_power             0.0800 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             0.3638 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            0.5360 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          0.5108 # avg power usage of resultbus
avg_clock_power             21.5856 # avg power usage of clock
fetch_stage_power      76173558.3927 # total power usage of fetch stage
dispatch_stage_power    870990.3489 # total power usage of dispatch stage
issue_stage_power      338130578.2936 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.0800 # average power of dispatch unit per cycle
avg_issue_power             31.0729 # average power of issue unit per cycle
total_power            655898826.2013 # total power per cycle
avg_total_power_cycle       60.2747 # average total power per cycle
avg_total_power_cycle_nofp_nod2      41.7845 # average total power per cycle
avg_total_power_insn        65.5899 # average total power per insn
avg_total_power_insn_nofp_nod2      45.4692 # average total power per insn
rename_power_cc1        800407.3388 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       4728703.0463 # total power usage of instruction window_cc1
lsq_power_cc1           394707.5416 # total power usage of lsq_cc1
regfile_power_cc1      4626786.8388 # total power usage of arch. regfile_cc1
icache_power_cc1       24773878.3296 # total power usage of icache_cc1
dcache_power_cc1       5193053.7296 # total power usage of dcache_cc1
dcache2_power_cc1         9502.0330 # total power usage of dcache2_cc1
alu_power_cc1          45266605.1656 # total power usage of alu_cc1
resultbus_power_cc1    3690634.1763 # total power usage of resultbus_cc1
clock_power_cc1        56396607.5241 # total power usage of clock_cc1
avg_rename_power_cc1         0.0736 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.4346 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.0363 # avg power usage of lsq_cc1
avg_regfile_power_cc1        0.4252 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         2.2766 # avg power usage of icache_cc1
avg_dcache_power_cc1         0.4772 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0009 # avg power usage of dcache2_cc1
avg_alu_power_cc1            4.1598 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.3392 # avg power usage of resultbus_cc1
avg_clock_power_cc1          5.1826 # avg power usage of clock_cc1
fetch_stage_power_cc1  24773878.3296 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1  800407.3388 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  59283205.6922 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.2766 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.0736 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          5.4479 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  145880885.7235 # total power per cycle_cc1
avg_total_power_cycle_cc1      13.4059 # average total power per cycle_cc1
avg_total_power_insn_cc1      14.5881 # average total power per insn_cc1
rename_power_cc2        800407.3388 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       4715626.1794 # total power usage of instruction window_cc2
lsq_power_cc2           197353.7708 # total power usage of lsq_cc2
regfile_power_cc2      2526012.5224 # total power usage of arch. regfile_cc2
icache_power_cc2       24773878.3296 # total power usage of icache_cc2
dcache_power_cc2       2596532.9497 # total power usage of dcache_cc2
dcache2_power_cc2         4834.1461 # total power usage of dcache2_cc2
alu_power_cc2          11316651.2914 # total power usage of alu_cc2
resultbus_power_cc2    3690634.1763 # total power usage of resultbus_cc2
clock_power_cc2        31787522.6669 # total power usage of clock_cc2
avg_rename_power_cc2         0.0736 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.4333 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0181 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.2321 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         2.2766 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.2386 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0004 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.0400 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.3392 # avg power usage of resultbus_cc2
avg_clock_power_cc2          2.9212 # avg power usage of clock_cc2
fetch_stage_power_cc2  24773878.3296 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2  800407.3388 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  22521632.5137 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.2766 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.0736 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          2.0697 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  82409453.3713 # total power per cycle_cc2
avg_total_power_cycle_cc2       7.5731 # average total power per cycle_cc2
avg_total_power_insn_cc2       8.2409 # average total power per insn_cc2
rename_power_cc3        807465.6398 # total power usage of rename unit_cc3
bpred_power_cc3        4921989.7033 # total power usage of bpred unit_cc3
window_power_cc3       4722493.5449 # total power usage of instruction window_cc3
lsq_power_cc3          1202070.9592 # total power usage of lsq_cc3
regfile_power_cc3      2579534.5526 # total power usage of arch. regfile_cc3
icache_power_cc3       24991856.6320 # total power usage of icache_cc3
dcache_power_cc3       8698719.7477 # total power usage of dcache_cc3
dcache2_power_cc3      4584151.9450 # total power usage of dcache2_cc3
alu_power_cc3          27401457.7375 # total power usage of alu_cc3
resultbus_power_cc3    3799620.5737 # total power usage of resultbus_cc3
clock_power_cc3        49609611.6358 # total power usage of clock_cc3
avg_rename_power_cc3         0.0742 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.4523 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.4340 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1105 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.2370 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         2.2967 # avg power usage of icache_cc3
avg_dcache_power_cc3         0.7994 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4213 # avg power usage of dcache2_cc3
avg_alu_power_cc3            2.5181 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.3492 # avg power usage of resultbus_cc3
avg_clock_power_cc3          4.5589 # avg power usage of clock_cc3
fetch_stage_power_cc3  29913846.3352 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3  807465.6398 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  50408514.5081 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.7490 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.0742 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          4.6324 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  133318972.6715 # total power per cycle_cc3
avg_total_power_cycle_cc3      12.2515 # average total power per cycle_cc3
avg_total_power_insn_cc3      13.3319 # average total power per insn_cc3
total_rename_access         9999993 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access        35526006 # total number accesses of instruction window
total_lsq_access             853435 # total number accesses of load/store queue
total_regfile_access       16159149 # total number accesses of arch. regfile
total_icache_access        10001801 # total number accesses of icache
total_dcache_access          853434 # total number accesses of dcache
total_dcache2_access           2297 # total number accesses of dcache2
total_alu_access            9713565 # total number accesses of alu
total_resultbus_access      8748311 # total number accesses of resultbus
avg_rename_access            0.9190 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            3.2647 # avg number accesses of instruction window
avg_lsq_access               0.0784 # avg number accesses of lsq
avg_regfile_access           1.4850 # avg number accesses of arch. regfile
avg_icache_access            0.9191 # avg number accesses of icache
avg_dcache_access            0.0784 # avg number accesses of dcache
avg_dcache2_access           0.0002 # avg number accesses of dcache2
avg_alu_access               0.8926 # avg number accesses of alu
avg_resultbus_access         0.8039 # avg number accesses of resultbus
max_rename_access                 1 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                 6 # max number accesses of instruction window
max_lsq_access                    1 # max number accesses of load/store queue
max_regfile_access                3 # max number accesses of arch. regfile
max_icache_access                 1 # max number accesses of icache
max_dcache_access                 2 # max number accesses of dcache
max_dcache2_access                3 # max number accesses of dcache2
max_alu_access                    1 # max number accesses of alu
max_resultbus_access              3 # max number accesses of resultbus
max_cycle_power_cc1         23.5334 # maximum cycle power usage of cc1
max_cycle_power_cc2         13.1579 # maximum cycle power usage of cc2
max_cycle_power_cc3         17.1790 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  81728 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                   9472 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   29 # total number of pages allocated
mem.page_mem                   116k # total size of memory pages allocated
mem.ptab_misses                  33 # total first level page table misses
mem.ptab_accesses          46526504 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 1
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 62.2747
Branch Predictor Power Consumption: 4.52313  (7.5%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.0800408  (0.133%)
 Instruction Decode Power (W): 0.00399788
 RAT decode_power (W): 0.0283786
 RAT wordline_power (W): 0.00699436
 RAT bitline_power (W): 0.0406699
 DCL Comparators (W): 0
Instruction Window Power Consumption: 0.363765  (0.604%)
 tagdrive (W): 0.0203623
 tagmatch (W): 0.00780062
 Selection Logic (W): 0.00335542
 decode_power (W): 0.0133126
 wordline_power (W): 0.00989977
 bitline_power (W): 0.309034
Load/Store Queue Power Consumption: 0.96318  (1.6%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 0.535973  (0.889%)
 decode_power (W): 0.0283786
 wordline_power (W): 0.00989977
 bitline_power (W): 0.497694
Result Bus Power Consumption: 0.510827  (0.847%)
Total Clock Power: 21.5856  (35.8%)
Int ALU Power: 4.66013  (7.73%)
FP ALU Power: 14.281  (23.7%)
Instruction Cache Power Consumption: 2.21363  (3.67%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.437%)
Data Cache Power Consumption: 5.18303  (8.6%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.5%)
Level 2 Cache Power Consumption: 4.2091 (6.98%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: ./sim-outorder -max:inst 10000000 -redir:sim out.txt -fetch:ifqsize 1 -decode:width 1 -issue:width 1 -issue:inorder true -issue:wrongpath false -commit:width 1 -bpred perfect -fetch:mplat 1 ../automotive/qsort/qsort_small ../automotive/qsort/input_small.dat 

sim: simulation started @ Thu Nov  5 20:41:40 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim          out.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst            10000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              1 # instruction fetch queue size (in insts)
-fetch:mplat                1 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb|tbit}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               1 # instruction decode B/W (insts/cycle)
-issue:width                1 # instruction issue B/W (insts/cycle)
-issue:inorder           true # run pipeline with in-order issue
-issue:wrongpath        false # issue instructions down wrong execution paths
-commit:width               1 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn               10000000 # total number of instructions committed
sim_num_refs                4875142 # total number of loads and stores committed
sim_num_loads               2817230 # total number of loads committed
sim_num_stores         2057912.0000 # total number of stores committed
sim_num_branches            1872077 # total number of branches committed
sim_elapsed_time                  6 # total simulation time in seconds
sim_inst_rate          1666666.6667 # simulation speed (in insts/sec)
sim_total_insn             10000000 # total number of instructions executed
sim_total_refs              4875142 # total number of loads and stores executed
sim_total_loads             2817230 # total number of loads executed
sim_total_stores       2057912.0000 # total number of stores executed
sim_total_branches          1872077 # total number of branches executed
sim_cycle                  15501017 # total simulation time in cycles
sim_IPC                      0.6451 # instructions per cycle
sim_CPI                      1.5501 # cycles per instruction
sim_exec_BW                  0.6451 # total instructions (mis-spec + committed) per cycle
sim_IPB                      5.3417 # instruction per branch
IFQ_count                  15004805 # cumulative IFQ occupancy
IFQ_fcount                 15004805 # cumulative IFQ full count
ifq_occupancy                0.9680 # avg IFQ occupancy (insn's)
ifq_rate                     0.6451 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.5005 # avg IFQ occupant latency (cycle's)
ifq_full                     0.9680 # fraction of time (cycle's) IFQ was full
RUU_count                  35731552 # cumulative RUU occupancy
RUU_fcount                        0 # cumulative RUU full count
ruu_occupancy                2.3051 # avg RUU occupancy (insn's)
ruu_rate                     0.6451 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  3.5732 # avg RUU occupant latency (cycle's)
ruu_full                     0.0000 # fraction of time (cycle's) RUU was full
LSQ_count                  19402870 # cumulative LSQ occupancy
LSQ_fcount                       24 # cumulative LSQ full count
lsq_occupancy                1.2517 # avg LSQ occupancy (insn's)
lsq_rate                     0.6451 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  1.9403 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0000 # fraction of time (cycle's) LSQ was full
sim_slip                   70009534 # total number of slip cycles
avg_sim_slip                 7.0010 # the average slip between issue and retirement
il1.accesses               10080961 # total number of accesses
il1.hits                   10000001 # total number of hits
il1.misses                    80960 # total number of misses
il1.replacements              80541 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0080 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0080 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                4875141 # total number of accesses
dl1.hits                    4715203 # total number of hits
dl1.misses                   159938 # total number of misses
dl1.replacements             159426 # total number of replacements
dl1.writebacks                92947 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0328 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0327 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0191 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                 333845 # total number of accesses
ul2.hits                     311091 # total number of hits
ul2.misses                    22754 # total number of misses
ul2.replacements              18658 # total number of replacements
ul2.writebacks                16610 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0682 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0559 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0498 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              10080961 # total number of accesses
itlb.hits                  10080944 # total number of hits
itlb.misses                      17 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses               4875141 # total number of accesses
dtlb.hits                   4874702 # total number of hits
dtlb.misses                     439 # total number of misses
dtlb.replacements               311 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0001 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0001 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           1240713.6451 # total power usage of rename unit
bpred_power            70113059.1418 # total power usage of bpred unit
window_power           5638729.3220 # total power usage of instruction window
lsq_power              14930269.3575 # total power usage of load/store queue
regfile_power          8308123.5979 # total power usage of arch. regfile
icache_power           38395115.9473 # total power usage of icache
dcache_power           94322235.5405 # total power usage of dcache
dcache2_power          65245260.0121 # total power usage of dcache2
alu_power              293607481.8945 # total power usage of alu
falu_power             221370720.5635 # total power usage of falu
resultbus_power        7918332.5255 # total power usage of resultbus
clock_power            334599439.6771 # total power usage of clock
avg_rename_power             0.0800 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             0.3638 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            0.5360 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          0.5108 # avg power usage of resultbus
avg_clock_power             21.5856 # avg power usage of clock
fetch_stage_power      108508175.0891 # total power usage of fetch stage
dispatch_stage_power   1240713.6451 # total power usage of dispatch stage
issue_stage_power      481662308.6522 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.0800 # average power of dispatch unit per cycle
avg_issue_power             31.0729 # average power of issue unit per cycle
total_power            934318760.6613 # total power per cycle
avg_total_power_cycle       60.2747 # average total power per cycle
avg_total_power_cycle_nofp_nod2      41.7845 # average total power per cycle
avg_total_power_insn        93.4319 # average total power per insn
avg_total_power_insn_nofp_nod2      64.7703 # average total power per insn
rename_power_cc1        800406.3783 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       6039784.7668 # total power usage of instruction window_cc1
lsq_power_cc1          2238916.9768 # total power usage of lsq_cc1
regfile_power_cc1      5602806.0501 # total power usage of arch. regfile_cc1
icache_power_cc1       24969953.0373 # total power usage of icache_cc1
dcache_power_cc1       28879853.5651 # total power usage of dcache_cc1
dcache2_power_cc1      1013878.4924 # total power usage of dcache2_cc1
alu_power_cc1          44687966.8387 # total power usage of alu_cc1
resultbus_power_cc1    5029013.5181 # total power usage of resultbus_cc1
clock_power_cc1        72685202.9773 # total power usage of clock_cc1
avg_rename_power_cc1         0.0516 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.3896 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1444 # avg power usage of lsq_cc1
avg_regfile_power_cc1        0.3614 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.6109 # avg power usage of icache_cc1
avg_dcache_power_cc1         1.8631 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0654 # avg power usage of dcache2_cc1
avg_alu_power_cc1            2.8829 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.3244 # avg power usage of resultbus_cc1
avg_clock_power_cc1          4.6891 # avg power usage of clock_cc1
fetch_stage_power_cc1  24969953.0373 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1  800406.3783 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  87889414.1578 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.6109 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.0516 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          5.6699 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  191947782.6008 # total power per cycle_cc1
avg_total_power_cycle_cc1      12.3829 # average total power per cycle_cc1
avg_total_power_insn_cc1      19.1948 # average total power per insn_cc1
rename_power_cc2        800406.3783 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       5775683.8301 # total power usage of instruction window_cc2
lsq_power_cc2          1119458.4884 # total power usage of lsq_cc2
regfile_power_cc2      2898982.5621 # total power usage of arch. regfile_cc2
icache_power_cc2       24969953.0373 # total power usage of icache_cc2
dcache_power_cc2       14832388.0248 # total power usage of dcache_cc2
dcache2_power_cc2       702592.7343 # total power usage of dcache2_cc2
alu_power_cc2          11171991.7097 # total power usage of alu_cc2
resultbus_power_cc2    5029013.5181 # total power usage of resultbus_cc2
clock_power_cc2        40809926.8458 # total power usage of clock_cc2
avg_rename_power_cc2         0.0516 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.3726 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0722 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.1870 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.6109 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.9569 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0453 # avg power usage of dcache2_cc2
avg_alu_power_cc2            0.7207 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.3244 # avg power usage of resultbus_cc2
avg_clock_power_cc2          2.6327 # avg power usage of clock_cc2
fetch_stage_power_cc2  24969953.0373 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2  800406.3783 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  38631128.3053 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.6109 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.0516 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          2.4922 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  108110397.1288 # total power per cycle_cc2
avg_total_power_cycle_cc2       6.9744 # average total power per cycle_cc2
avg_total_power_insn_cc2      10.8110 # average total power per insn_cc2
rename_power_cc3        844437.1050 # total power usage of rename unit_cc3
bpred_power_cc3        7011305.9172 # total power usage of bpred unit_cc3
window_power_cc3       5806030.0568 # total power usage of instruction window_cc3
lsq_power_cc3          2371901.0933 # total power usage of lsq_cc3
regfile_power_cc3      3103133.7469 # total power usage of arch. regfile_cc3
icache_power_cc3       26312469.3256 # total power usage of icache_cc3
dcache_power_cc3       21376626.2259 # total power usage of dcache_cc3
dcache2_power_cc3      7125735.0982 # total power usage of dcache2_cc3
alu_power_cc3          36063943.2144 # total power usage of alu_cc3
resultbus_power_cc3    5269361.8480 # total power usage of resultbus_cc3
clock_power_cc3        66954600.2793 # total power usage of clock_cc3
avg_rename_power_cc3         0.0545 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.4523 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.3746 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1530 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.2002 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.6975 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.3790 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4597 # avg power usage of dcache2_cc3
avg_alu_power_cc3            2.3266 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.3399 # avg power usage of resultbus_cc3
avg_clock_power_cc3          4.3194 # avg power usage of clock_cc3
fetch_stage_power_cc3  33323775.2427 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3  844437.1050 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  78013597.5366 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.1498 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.0545 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          5.0328 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  182239543.9104 # total power per cycle_cc3
avg_total_power_cycle_cc3      11.7566 # average total power per cycle_cc3
avg_total_power_insn_cc3      18.2240 # average total power per insn_cc3
total_rename_access         9999981 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access        42056164 # total number accesses of instruction window
total_lsq_access            4875141 # total number accesses of load/store queue
total_regfile_access       18195156 # total number accesses of arch. regfile
total_icache_access        10080961 # total number accesses of icache
total_dcache_access         4875141 # total number accesses of dcache
total_dcache2_access         333845 # total number accesses of dcache2
total_alu_access            9589424 # total number accesses of alu
total_resultbus_access     10945132 # total number accesses of resultbus
avg_rename_access            0.6451 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            2.7131 # avg number accesses of instruction window
avg_lsq_access               0.3145 # avg number accesses of lsq
avg_regfile_access           1.1738 # avg number accesses of arch. regfile
avg_icache_access            0.6503 # avg number accesses of icache
avg_dcache_access            0.3145 # avg number accesses of dcache
avg_dcache2_access           0.0215 # avg number accesses of dcache2
avg_alu_access               0.6186 # avg number accesses of alu
avg_resultbus_access         0.7061 # avg number accesses of resultbus
max_rename_access                 1 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                 9 # max number accesses of instruction window
max_lsq_access                    1 # max number accesses of load/store queue
max_regfile_access                3 # max number accesses of arch. regfile
max_icache_access                 1 # max number accesses of icache
max_dcache_access                 2 # max number accesses of dcache
max_dcache2_access                3 # max number accesses of dcache2
max_alu_access                    1 # max number accesses of alu
max_resultbus_access              7 # max number accesses of resultbus
max_cycle_power_cc1         19.6722 # maximum cycle power usage of cc1
max_cycle_power_cc2         13.1747 # maximum cycle power usage of cc2
max_cycle_power_cc3         17.2404 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 101552 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  12288 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  390 # total number of pages allocated
mem.page_mem                  1560k # total size of memory pages allocated
mem.ptab_misses                 390 # total first level page table misses
mem.ptab_accesses          77378214 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 1
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 62.2747
Branch Predictor Power Consumption: 4.52313  (7.5%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.0800408  (0.133%)
 Instruction Decode Power (W): 0.00399788
 RAT decode_power (W): 0.0283786
 RAT wordline_power (W): 0.00699436
 RAT bitline_power (W): 0.0406699
 DCL Comparators (W): 0
Instruction Window Power Consumption: 0.363765  (0.604%)
 tagdrive (W): 0.0203623
 tagmatch (W): 0.00780062
 Selection Logic (W): 0.00335542
 decode_power (W): 0.0133126
 wordline_power (W): 0.00989977
 bitline_power (W): 0.309034
Load/Store Queue Power Consumption: 0.96318  (1.6%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 0.535973  (0.889%)
 decode_power (W): 0.0283786
 wordline_power (W): 0.00989977
 bitline_power (W): 0.497694
Result Bus Power Consumption: 0.510827  (0.847%)
Total Clock Power: 21.5856  (35.8%)
Int ALU Power: 4.66013  (7.73%)
FP ALU Power: 14.281  (23.7%)
Instruction Cache Power Consumption: 2.21363  (3.67%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.437%)
Data Cache Power Consumption: 5.18303  (8.6%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.5%)
Level 2 Cache Power Consumption: 4.2091 (6.98%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: ./sim-outorder -max:inst 10000000 -redir:sim out.txt -fetch:ifqsize 1 -decode:width 1 -issue:width 1 -issue:inorder true -issue:wrongpath false -commit:width 1 -bpred perfect -fetch:mplat 1 ../automotive/qsort/qsort_large ../automotive/qsort/input_large.dat 

sim: simulation started @ Thu Nov  5 20:41:46 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim          out.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst            10000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              1 # instruction fetch queue size (in insts)
-fetch:mplat                1 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb|tbit}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               1 # instruction decode B/W (insts/cycle)
-issue:width                1 # instruction issue B/W (insts/cycle)
-issue:inorder           true # run pipeline with in-order issue
-issue:wrongpath        false # issue instructions down wrong execution paths
-commit:width               1 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn               10000000 # total number of instructions committed
sim_num_refs                3116585 # total number of loads and stores committed
sim_num_loads               2138586 # total number of loads committed
sim_num_stores          977999.0000 # total number of stores committed
sim_num_branches            2635877 # total number of branches committed
sim_elapsed_time                  7 # total simulation time in seconds
sim_inst_rate          1428571.4286 # simulation speed (in insts/sec)
sim_total_insn             10000000 # total number of instructions executed
sim_total_refs              3116585 # total number of loads and stores executed
sim_total_loads             2138586 # total number of loads executed
sim_total_stores        977999.0000 # total number of stores executed
sim_total_branches          2635877 # total number of branches executed
sim_cycle                  14747539 # total simulation time in cycles
sim_IPC                      0.6781 # instructions per cycle
sim_CPI                      1.4748 # cycles per instruction
sim_exec_BW                  0.6781 # total instructions (mis-spec + committed) per cycle
sim_IPB                      3.7938 # instruction per branch
IFQ_count                  13524769 # cumulative IFQ occupancy
IFQ_fcount                 13524769 # cumulative IFQ full count
ifq_occupancy                0.9171 # avg IFQ occupancy (insn's)
ifq_rate                     0.6781 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.3525 # avg IFQ occupant latency (cycle's)
ifq_full                     0.9171 # fraction of time (cycle's) IFQ was full
RUU_count                  33745269 # cumulative RUU occupancy
RUU_fcount                        0 # cumulative RUU full count
ruu_occupancy                2.2882 # avg RUU occupancy (insn's)
ruu_rate                     0.6781 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  3.3745 # avg RUU occupant latency (cycle's)
ruu_full                     0.0000 # fraction of time (cycle's) RUU was full
LSQ_count                  11586621 # cumulative LSQ occupancy
LSQ_fcount                        0 # cumulative LSQ full count
lsq_occupancy                0.7857 # avg LSQ occupancy (insn's)
lsq_rate                     0.6781 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  1.1587 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0000 # fraction of time (cycle's) LSQ was full
sim_slip                   58448436 # total number of slip cycles
avg_sim_slip                 5.8448 # the average slip between issue and retirement
il1.accesses               10202587 # total number of accesses
il1.hits                   10000001 # total number of hits
il1.misses                   202586 # total number of misses
il1.replacements             202268 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0199 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0198 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                3116584 # total number of accesses
dl1.hits                    3113474 # total number of hits
dl1.misses                     3110 # total number of misses
dl1.replacements               2598 # total number of replacements
dl1.writebacks                 2586 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0010 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0008 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0008 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                 208282 # total number of accesses
ul2.hits                     206420 # total number of hits
ul2.misses                     1862 # total number of misses
ul2.replacements                  0 # total number of replacements
ul2.writebacks                    0 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0089 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              10202587 # total number of accesses
itlb.hits                  10202570 # total number of hits
itlb.misses                      17 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses               3116584 # total number of accesses
dtlb.hits                   3116553 # total number of hits
dtlb.misses                      31 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           1180404.6708 # total power usage of rename unit
bpred_power            66704982.9130 # total power usage of bpred unit
window_power           5364640.3065 # total power usage of instruction window
lsq_power              14204534.4273 # total power usage of load/store queue
regfile_power          7904279.8788 # total power usage of arch. regfile
icache_power           36528794.8430 # total power usage of icache
dcache_power           89737392.5377 # total power usage of dcache
dcache2_power          62073799.1976 # total power usage of dcache2
alu_power              279335722.9355 # total power usage of alu
falu_power             210610267.3691 # total power usage of falu
resultbus_power        7533435.8857 # total power usage of resultbus
clock_power            318335131.5777 # total power usage of clock
avg_rename_power             0.0800 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             0.3638 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            0.5360 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          0.5108 # avg power usage of resultbus
avg_clock_power             21.5856 # avg power usage of clock
fetch_stage_power      103233777.7560 # total power usage of fetch stage
dispatch_stage_power   1180404.6708 # total power usage of dispatch stage
issue_stage_power      458249525.2903 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.0800 # average power of dispatch unit per cycle
avg_issue_power             31.0729 # average power of issue unit per cycle
total_power            888903119.1736 # total power per cycle
avg_total_power_cycle       60.2747 # average total power per cycle
avg_total_power_cycle_nofp_nod2      41.7845 # average total power per cycle
avg_total_power_insn        88.8903 # average total power per insn
avg_total_power_insn_nofp_nod2      61.6219 # average total power per insn
rename_power_cc1        800405.5779 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       5373349.1063 # total power usage of instruction window_cc1
lsq_power_cc1          1502015.5089 # total power usage of lsq_cc1
regfile_power_cc1      4726391.8885 # total power usage of arch. regfile_cc1
icache_power_cc1       25271213.5527 # total power usage of icache_cc1
dcache_power_cc1       18943706.6691 # total power usage of dcache_cc1
dcache2_power_cc1       865741.4828 # total power usage of dcache2_cc1
alu_power_cc1          46069053.9241 # total power usage of alu_cc1
resultbus_power_cc1    4117696.6981 # total power usage of resultbus_cc1
clock_power_cc1        66556950.0728 # total power usage of clock_cc1
avg_rename_power_cc1         0.0543 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.3644 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1018 # avg power usage of lsq_cc1
avg_regfile_power_cc1        0.3205 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.7136 # avg power usage of icache_cc1
avg_dcache_power_cc1         1.2845 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0587 # avg power usage of dcache2_cc1
avg_alu_power_cc1            3.1238 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.2792 # avg power usage of resultbus_cc1
avg_clock_power_cc1          4.5131 # avg power usage of clock_cc1
fetch_stage_power_cc1  25271213.5527 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1  800405.5779 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  76871563.3894 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.7136 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.0543 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          5.2125 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  174226524.4812 # total power per cycle_cc1
avg_total_power_cycle_cc1      11.8139 # average total power per cycle_cc1
avg_total_power_insn_cc1      17.4227 # average total power per insn_cc1
rename_power_cc2        800405.5779 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       5183584.1548 # total power usage of instruction window_cc2
lsq_power_cc2           751007.7545 # total power usage of lsq_cc2
regfile_power_cc2      2318736.3078 # total power usage of arch. regfile_cc2
icache_power_cc2       25271213.5527 # total power usage of icache_cc2
dcache_power_cc2       9482060.7648 # total power usage of dcache_cc2
dcache2_power_cc2       438339.4087 # total power usage of dcache2_cc2
alu_power_cc2          11517263.4810 # total power usage of alu_cc2
resultbus_power_cc2    4117696.6981 # total power usage of resultbus_cc2
clock_power_cc2        37040686.7328 # total power usage of clock_cc2
avg_rename_power_cc2         0.0543 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.3515 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0509 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.1572 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.7136 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.6430 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0297 # avg power usage of dcache2_cc2
avg_alu_power_cc2            0.7810 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.2792 # avg power usage of resultbus_cc2
avg_clock_power_cc2          2.5117 # avg power usage of clock_cc2
fetch_stage_power_cc2  25271213.5527 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2  800405.5779 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  31489952.2619 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.7136 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.0543 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          2.1353 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  96920994.4331 # total power per cycle_cc2
avg_total_power_cycle_cc2       6.5720 # average total power per cycle_cc2
avg_total_power_insn_cc2       9.6921 # average total power per insn_cc2
rename_power_cc3        838405.4872 # total power usage of rename unit_cc3
bpred_power_cc3        6670498.2939 # total power usage of bpred unit_cc3
window_power_cc3       5243141.0528 # total power usage of instruction window_cc3
lsq_power_cc3          2012500.8296 # total power usage of lsq_cc3
regfile_power_cc3      2564821.4690 # total power usage of arch. regfile_cc3
icache_power_cc3       26396971.6797 # total power usage of icache_cc3
dcache_power_cc3       16561429.3547 # total power usage of dcache_cc3
dcache2_power_cc3      6559145.8140 # total power usage of dcache2_cc3
alu_power_cc3          34843930.3805 # total power usage of alu_cc3
resultbus_power_cc3    4388360.3932 # total power usage of resultbus_cc3
clock_power_cc3        62161876.8434 # total power usage of clock_cc3
avg_rename_power_cc3         0.0569 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.4523 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.3555 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1365 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.1739 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.7899 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.1230 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4448 # avg power usage of dcache2_cc3
avg_alu_power_cc3            2.3627 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.2976 # avg power usage of resultbus_cc3
avg_clock_power_cc3          4.2151 # avg power usage of clock_cc3
fetch_stage_power_cc3  33067469.9736 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3  838405.4872 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  69608507.8248 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.2422 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.0569 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          4.7200 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  168241081.5980 # total power per cycle_cc3
avg_total_power_cycle_cc3      11.4081 # average total power per cycle_cc3
avg_total_power_insn_cc3      16.8241 # average total power per insn_cc3
total_rename_access         9999971 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access        38102982 # total number accesses of instruction window
total_lsq_access            3116585 # total number accesses of load/store queue
total_regfile_access       15054286 # total number accesses of arch. regfile
total_icache_access        10202587 # total number accesses of icache
total_dcache_access         3116584 # total number accesses of dcache
total_dcache2_access         208282 # total number accesses of dcache2
total_alu_access            9574096 # total number accesses of alu
total_resultbus_access      9502680 # total number accesses of resultbus
avg_rename_access            0.6781 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            2.5837 # avg number accesses of instruction window
avg_lsq_access               0.2113 # avg number accesses of lsq
avg_regfile_access           1.0208 # avg number accesses of arch. regfile
avg_icache_access            0.6918 # avg number accesses of icache
avg_dcache_access            0.2113 # avg number accesses of dcache
avg_dcache2_access           0.0141 # avg number accesses of dcache2
avg_alu_access               0.6492 # avg number accesses of alu
avg_resultbus_access         0.6444 # avg number accesses of resultbus
max_rename_access                 1 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                 5 # max number accesses of instruction window
max_lsq_access                    1 # max number accesses of load/store queue
max_regfile_access                3 # max number accesses of arch. regfile
max_icache_access                 1 # max number accesses of icache
max_dcache_access                 2 # max number accesses of dcache
max_dcache2_access                3 # max number accesses of dcache2
max_alu_access                    1 # max number accesses of alu
max_resultbus_access              3 # max number accesses of resultbus
max_cycle_power_cc1         28.3862 # maximum cycle power usage of cc1
max_cycle_power_cc2         12.6225 # maximum cycle power usage of cc2
max_cycle_power_cc3         16.6427 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 103072 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  12288 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   57 # total number of pages allocated
mem.page_mem                   228k # total size of memory pages allocated
mem.ptab_misses                  57 # total first level page table misses
mem.ptab_accesses          62193400 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

