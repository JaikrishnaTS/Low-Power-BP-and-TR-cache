sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 1
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 62.7685
Branch Predictor Power Consumption: 4.52617  (7.45%)
 branch target buffer power (W): 4.16837
 TBIT power (W): 0.00304519
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.0800408  (0.132%)
 Instruction Decode Power (W): 0.00399788
 RAT decode_power (W): 0.0283786
 RAT wordline_power (W): 0.00699436
 RAT bitline_power (W): 0.0406699
 DCL Comparators (W): 0
Instruction Window Power Consumption: 0.363765  (0.599%)
 tagdrive (W): 0.0203623
 tagmatch (W): 0.00780062
 Selection Logic (W): 0.00335542
 decode_power (W): 0.0133126
 wordline_power (W): 0.00989977
 bitline_power (W): 0.309034
Load/Store Queue Power Consumption: 0.96318  (1.58%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 0.535973  (0.882%)
 decode_power (W): 0.0283786
 wordline_power (W): 0.00989977
 bitline_power (W): 0.497694
Result Bus Power Consumption: 0.510827  (0.841%)
Total Clock Power: 21.873  (36%)
Int ALU Power: 4.66013  (7.67%)
FP ALU Power: 14.281  (23.5%)
Instruction Cache Power Consumption: 2.21363  (3.64%)
 tet_power (W): 0.0333148
 htb_power (W): 0.0720937
 trc_power (W): 0.203425
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.433%)
Data Cache Power Consumption: 5.18303  (8.53%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.48%)
Level 2 Cache Power Consumption: 4.2091 (6.93%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: ./sim-outorder -max:inst 100000000 -redir:sim trcperfect/out3.txt -fetch:ifqsize 1 -decode:width 1 -issue:width 1 -issue:inorder true -issue:wrongpath false -commit:width 1 -bpred perfect -fetch:mplat 1 ../../../simplescalar/automotive/bitcount/bitcnts 75000 

sim: simulation started @ Sun Dec  6 20:47:48 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     trcperfect/out3.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst           100000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              1 # instruction fetch queue size (in insts)
-fetch:mplat                1 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb|tbit}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               1 # instruction decode B/W (insts/cycle)
-issue:width                1 # instruction issue B/W (insts/cycle)
-issue:inorder           true # run pipeline with in-order issue
-issue:wrongpath        false # issue instructions down wrong execution paths
-commit:width               1 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:trc       trc:2048:512 # TRC cache config, i.e., {<config>|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn               43640675 # total number of instructions committed
sim_num_refs                5125775 # total number of loads and stores committed
sim_num_loads               3840371 # total number of loads committed
sim_num_stores         1285404.0000 # total number of stores committed
sim_num_branches            8918346 # total number of branches committed
sim_elapsed_time                 57 # total simulation time in seconds
sim_inst_rate           765625.8772 # simulation speed (in insts/sec)
sim_total_insn             43640674 # total number of instructions executed
sim_total_refs              5125775 # total number of loads and stores executed
sim_total_loads             3840371 # total number of loads executed
sim_total_stores       1285404.0000 # total number of stores executed
sim_total_branches          8918346 # total number of branches executed
sim_cycle                  48826619 # total simulation time in cycles
sim_IPC                      0.8938 # instructions per cycle
sim_CPI                      1.1188 # cycles per instruction
sim_exec_BW                  0.8938 # total instructions (mis-spec + committed) per cycle
sim_IPB                      4.8934 # instruction per branch
IFQ_count                  48774109 # cumulative IFQ occupancy
IFQ_fcount                 48774109 # cumulative IFQ full count
ifq_occupancy                0.9989 # avg IFQ occupancy (insn's)
ifq_rate                     0.8938 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.1176 # avg IFQ occupant latency (cycle's)
ifq_full                     0.9989 # fraction of time (cycle's) IFQ was full
RUU_count                 134793801 # cumulative RUU occupancy
RUU_fcount                        0 # cumulative RUU full count
ruu_occupancy                2.7607 # avg RUU occupancy (insn's)
ruu_rate                     0.8938 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  3.0887 # avg RUU occupant latency (cycle's)
ruu_full                     0.0000 # fraction of time (cycle's) RUU was full
LSQ_count                  19219863 # cumulative LSQ occupancy
LSQ_fcount                        0 # cumulative LSQ full count
lsq_occupancy                0.3936 # avg LSQ occupancy (insn's)
lsq_rate                     0.8938 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  0.4404 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0000 # fraction of time (cycle's) LSQ was full
sim_slip                  202780083 # total number of slip cycles
avg_sim_slip                 4.6466 # the average slip between issue and retirement
il1.accesses                1301170 # total number of accesses
il1.hits                    1295404 # total number of hits
il1.misses                     5766 # total number of misses
il1.replacements               5268 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0044 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0040 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                5125775 # total number of accesses
dl1.hits                    5125271 # total number of hits
dl1.misses                      504 # total number of misses
dl1.replacements                 32 # total number of replacements
dl1.writebacks                   28 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0001 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                   6298 # total number of accesses
ul2.hits                       5338 # total number of hits
ul2.misses                      960 # total number of misses
ul2.replacements                  0 # total number of replacements
ul2.writebacks                    0 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.1524 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses               1301170 # total number of accesses
itlb.hits                   1301150 # total number of hits
itlb.misses                      20 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses               5125775 # total number of accesses
dtlb.hits                   5125765 # total number of hits
dtlb.misses                      10 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
TRC.accesses               42608616 # total number of accesses
TRC.hits                   42345271 # total number of hits
TRC.misses                   263345 # total number of misses
TRC.tetaccesses             1037825 # total number of TET accesses
rename_power           3908121.1586 # total power usage of rename unit
bpred_power            220848969.1291 # total power usage of bpred unit
window_power           17761420.9495 # total power usage of instruction window
lsq_power              47028822.3082 # total power usage of load/store queue
regfile_power          26169740.0653 # total power usage of arch. regfile
trc_power              5054150.0928 # total power usage of trc
icache_power           3181111.5022 # total power usage of icache
dcache_power           297105400.3388 # total power usage of dcache
dcache2_power          205515899.6974 # total power usage of dcache2
alu_power              924833555.9483 # total power usage of alu
falu_power             697295141.0453 # total power usage of falu
resultbus_power        24941938.0324 # total power usage of resultbus
clock_power            1067983158.7580 # total power usage of clock
avg_rename_power             0.0800 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             0.3638 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            0.5360 # avg power usage of arch. regfile
avg_trc_power                0.1035 # avg power usage of trc
avg_icache_power             0.0652 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          0.5108 # avg power usage of resultbus
avg_clock_power             21.8730 # avg power usage of clock
fetch_stage_power      229084230.7241 # total power usage of fetch stage
dispatch_stage_power   3908121.1586 # total power usage of dispatch stage
issue_stage_power      1517187037.2745 # total power usage of issue stage
avg_fetch_power              4.6918 # average power of fetch unit per cycle
avg_dispatch_power           0.0800 # average power of dispatch unit per cycle
avg_issue_power             31.0729 # average power of issue unit per cycle
total_power            2844332287.9805 # total power per cycle
avg_total_power_cycle       58.2537 # average total power per cycle
avg_total_power_cycle_nofp_nod2      39.7636 # average total power per cycle
avg_total_power_insn        65.1762 # average total power per insn
avg_total_power_insn_nofp_nod2      44.4888 # average total power per insn
rename_power_cc1       3493031.6219 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       21348663.7091 # total power usage of instruction window_cc1
lsq_power_cc1          2479119.1578 # total power usage of lsq_cc1
regfile_power_cc1      20983859.9839 # total power usage of arch. regfile_cc1
icache_power_cc1       3222922.2787 # total power usage of icache_cc1
dcache_power_cc1       31189842.1937 # total power usage of dcache_cc1
dcache2_power_cc1        26294.2192 # total power usage of dcache2_cc1
alu_power_cc1          198467577.2793 # total power usage of alu_cc1
resultbus_power_cc1    15334271.9501 # total power usage of resultbus_cc1
clock_power_cc1        201257801.2081 # total power usage of clock_cc1
avg_rename_power_cc1         0.0715 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.4372 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.0508 # avg power usage of lsq_cc1
avg_regfile_power_cc1        0.4298 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         0.0660 # avg power usage of icache_cc1
avg_dcache_power_cc1         0.6388 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0005 # avg power usage of dcache2_cc1
avg_alu_power_cc1            4.0647 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.3141 # avg power usage of resultbus_cc1
avg_clock_power_cc1          4.1219 # avg power usage of clock_cc1
fetch_stage_power_cc1  3222922.2787 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 3493031.6219 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  268845768.5092 # total power usage of issue stage_cc1
avg_fetch_power_cc1          0.0660 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.0715 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          5.5061 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  497803383.6018 # total power per cycle_cc1
avg_total_power_cycle_cc1      10.1953 # average total power per cycle_cc1
avg_total_power_insn_cc1      11.4069 # average total power per insn_cc1
rename_power_cc2       3493031.6219 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       21280119.3720 # total power usage of instruction window_cc2
lsq_power_cc2          1239559.5789 # total power usage of lsq_cc2
regfile_power_cc2      10780199.4615 # total power usage of arch. regfile_cc2
icache_power_cc2       3222922.2787 # total power usage of icache_cc2
dcache_power_cc2       15594930.2242 # total power usage of dcache_cc2
dcache2_power_cc2        13254.4416 # total power usage of dcache2_cc2
alu_power_cc2          49616894.3198 # total power usage of alu_cc2
resultbus_power_cc2    15334271.9501 # total power usage of resultbus_cc2
clock_power_cc2        83078558.1869 # total power usage of clock_cc2
avg_rename_power_cc2         0.0715 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.4358 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0254 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.2208 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         0.0660 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.3194 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0003 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.0162 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.3141 # avg power usage of resultbus_cc2
avg_clock_power_cc2          1.7015 # avg power usage of clock_cc2
fetch_stage_power_cc2  3222922.2787 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 3493031.6219 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  103079029.8866 # total power usage of issue stage_cc2
avg_fetch_power_cc2          0.0660 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.0715 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          2.1111 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  203653741.4356 # total power per cycle_cc2
avg_total_power_cycle_cc2       4.1710 # average total power per cycle_cc2
avg_total_power_insn_cc2       4.6666 # average total power per insn_cc2
rename_power_cc3       3534540.5760 # total power usage of rename unit_cc3
bpred_power_cc3        22099765.5555 # total power usage of bpred unit_cc3
window_power_cc3       21310742.3047 # total power usage of instruction window_cc3
lsq_power_cc3          5676065.5605 # total power usage of lsq_cc3
regfile_power_cc3      11025249.0161 # total power usage of arch. regfile_cc3
icache_power_cc3       14994699.1037 # total power usage of icache_cc3
dcache_power_cc3       42186485.9755 # total power usage of dcache_cc3
dcache2_power_cc3      20562216.6470 # total power usage of dcache2_cc3
alu_power_cc3          122253491.9145 # total power usage of alu_cc3
resultbus_power_cc3    15858582.8890 # total power usage of resultbus_cc3
clock_power_cc3        177038641.1460 # total power usage of clock_cc3
avg_rename_power_cc3         0.0724 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.4526 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.4365 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1162 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.2258 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         0.3071 # avg power usage of icache_cc3
avg_dcache_power_cc3         0.8640 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4211 # avg power usage of dcache2_cc3
avg_alu_power_cc3            2.5038 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.3248 # avg power usage of resultbus_cc3
avg_clock_power_cc3          3.6259 # avg power usage of clock_cc3
fetch_stage_power_cc3  37094464.6592 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 3534540.5760 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  227847585.2912 # total power usage of issue stage_cc3
avg_fetch_power_cc3          0.7597 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.0724 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          4.6665 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  456540480.6885 # total power per cycle_cc3
avg_total_power_cycle_cc3       9.3502 # average total power per cycle_cc3
avg_total_power_insn_cc3      10.4614 # average total power per insn_cc3
total_rename_access        43640644 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access       156624617 # total number accesses of instruction window
total_lsq_access            5125775 # total number accesses of load/store queue
total_regfile_access       68329755 # total number accesses of arch. regfile
total_icache_access         1301170 # total number accesses of icache
total_trc_access           42345271 # total number accesses of trc
total_dcache_access         5125775 # total number accesses of dcache
total_dcache2_access           6298 # total number accesses of dcache2
total_alu_access           42588332 # total number accesses of alu
total_resultbus_access     38562669 # total number accesses of resultbus
avg_rename_access            0.8938 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            3.2078 # avg number accesses of instruction window
avg_lsq_access               0.1050 # avg number accesses of lsq
avg_regfile_access           1.3994 # avg number accesses of arch. regfile
avg_icache_access            0.0266 # avg number accesses of icache
avg_trc_access               0.8673 # avg number accesses of trc
avg_dcache_access            0.1050 # avg number accesses of dcache
avg_dcache2_access           0.0001 # avg number accesses of dcache2
avg_alu_access               0.8722 # avg number accesses of alu
avg_resultbus_access         0.7898 # avg number accesses of resultbus
max_rename_access                 1 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                 5 # max number accesses of instruction window
max_lsq_access                    1 # max number accesses of load/store queue
max_regfile_access                3 # max number accesses of arch. regfile
max_icache_access                 1 # max number accesses of icache
max_trc_access                    1 # max number accesses of icache
max_dcache_access                 2 # max number accesses of dcache
max_dcache2_access                3 # max number accesses of dcache2
max_alu_access                    1 # max number accesses of alu
max_resultbus_access              3 # max number accesses of resultbus
max_cycle_power_cc1         22.4133 # maximum cycle power usage of cc1
max_cycle_power_cc2         11.7930 # maximum cycle power usage of cc2
max_cycle_power_cc3         16.1005 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  81728 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                   9472 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   30 # total number of pages allocated
mem.page_mem                   120k # total size of memory pages allocated
mem.ptab_misses                  42 # total first level page table misses
mem.ptab_accesses          34108466 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

